{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","reactDom","render","document","getElementById"],"mappings":"yMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBAAOO,KAAO,OACbC,MAAQT,EACRU,SAlBkB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KA4BtC,OArBAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAM,SAAAC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,IAGZM,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,WAIL,CAACpB,IAIAqB,EDxByBM,CAAa3B,GAAhCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAGrB,OACI,qCACA,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAY,iBAAf,qBAEV,qBAAKA,UAAU,aAAf,SAEUH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEStBiB,EAxBM,WAAO,IAAD,EAGa1C,mBAAS,CAAC,cAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAMvB,OACA,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCdrB8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dcd74a5c.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handdleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n        }\r\n\r\n    const handdleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >2 ){\r\n            setCategories(cats => [inputValue , ...cats ] )\r\n            setInputValue('');\r\n        }\r\n\r\n    }    \r\n\r\n\r\n    return (\r\n        <form onSubmit ={handdleSubmit}>\r\n            <input type = 'text'\r\n             value= {inputValue}\r\n             onChange= {handdleInputChange}>\r\n                \r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired \r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Gs3z2pdYXvhWZDJdqACe19edBo3ccShJ`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n        \r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p className = \"animate__flash\">Loading</p>}\r\n\r\n        { <div className=\"card-grid \">\r\n                {\r\n                    images.map( img=>(\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            { ...img}\r\n                        />\r\n                    ))\r\n                } \r\n            \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category).then (imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading:false\r\n            })\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            }, 1500);\r\n\r\n        })\r\n\r\n        },[category])\r\n\r\n\r\n\r\n    return state; \r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Samurai X'])\r\n\r\n\r\n    return (\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategories={setCategories}/>\r\n    <hr/>\r\n    <ol>        \r\n        {\r\n            categories.map(category => (\r\n                <GifGrid\r\n                key={category}\r\n                category= {category} />\r\n            ) )\r\n        }\r\n    </ol>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css'\r\n\r\nreactDom.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}